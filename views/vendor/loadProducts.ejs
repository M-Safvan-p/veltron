<style>
    .main-content {
        width: 100%;
        min-height: 100vh;
        padding: 20px;
    }

    .vendor-page {
        display: flex;
        gap: 30px;
        align-items: flex-start;
        max-width: 1400px;
        margin: 0 auto;
    }

    .sidebar {
        flex-shrink: 0;
    }

    .vendor-container {
        flex: 1;
        width: 100%;
        margin: 0;
        padding: 18px;
    }

    .breadcrumb {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 25px;
        font-size: 14px;
        color: #6c757d;
    }

    .breadcrumb a {
        color: #6c757d;
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .breadcrumb a:hover {
        color: #212529;
    }

    .breadcrumb-separator {
        color: #adb5bd;
    }

    .page-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .page-title {
        font-size: 24px;
        color: #212529;
        font-weight: 600;
        margin-bottom: 8px;
    }

    .page-subtitle {
        font-size: 14px;
        color: #6c757d;
        margin: 0;
    }

    .products-section {
        width: 100%;
    }

    .products-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
        flex-wrap: wrap;
    }

    .control-group {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .control-label {
        font-size: 14px;
        color: #495057;
        font-weight: 500;
    }

    .products-controls select {
        padding: 8px 12px;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        font-size: 14px;
        color: #212529;
        background: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .products-controls select:hover {
        border-color: #adb5bd;
        background: #f8f9fa;
    }

    .add-product-btn {
        background: #212529;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .add-product-btn:hover {
        background: #495057;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(33, 37, 41, 0.2);
    }

    /* Table Styles (Desktop) */
    .table-container {
        background: white;
        border-radius: 14px;
        box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
        overflow: hidden;
        overflow-x: auto;
    }

    .products-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }

    .products-table thead {
        background: #f8f9fa;
        border-bottom: 2px solid #e9ecef;
    }

    .products-table th {
        padding: 18px 16px;
        text-align: left;
        font-weight: 600;
        color: #495057;
        font-size: 13px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        white-space: nowrap;
    }

    .products-table td {
        padding: 16px;
        border-bottom: 1px solid #f1f3f4;
        vertical-align: middle;
    }

    .product-row {
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .product-row:hover {
        background: #f8f9fa;
    }

    .product-row:last-child td {
        border-bottom: none;
    }

    /* Product Cell Styles */
    .product-image-cell {
        min-width: 80px;
    }

    .product-image {
        width: 50px;
        height: 50px;
        border-radius: 8px;
        overflow: hidden;
        border: 1px solid #e9ecef;
    }

    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product-info-cell {
        min-width: 200px;
    }

    .product-name {
        font-size: 14px;
        color: #212529;
        font-weight: 500;
        margin: 0 0 4px 0;
        line-height: 1.3;
    }

    .product-category {
        font-size: 12px;
        color: #6c757d;
        background: #f8f9fa;
        padding: 2px 8px;
        border-radius: 12px;
        display: inline-block;
        margin: 0;
    }

    .price-cell {
        min-width: 100px;
    }

    .product-price {
        font-size: 14px;
        color: #212529;
        font-weight: 600;
    }

    .stock-cell {
        min-width: 120px;
    }

    .stock-count {
        font-size: 14px;
        color: #212529;
        font-weight: 500;
        margin: 0 0 8px 0;
    }

    .stock-count.low {
        color: #dc3545;
    }

    .stock-count.medium {
        color: #fd7e14;
    }

    .stock-count.high {
        color: #28a745;
    }

    .variant-stock-container {
        margin-top: 8px;
        font-size: 11px;
    }

    .variant-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 4px;
        padding: 4px 8px;
        background: #f8f9fa;
        border-radius: 4px;
        border: 1px solid #e9ecef;
    }

    .variant-color {
        font-weight: 500;
        color: #495057;
    }

    .variant-stock {
        font-weight: 600;
        font-size: 10px;
        padding: 2px 6px;
        background: #e9ecef;
        border-radius: 8px;
        color: #495057;
    }

    .variant-stock.low {
        background: #f8d7da;
        color: #721c24;
    }

    .toggle-variants {
        background: none;
        border: none;
        color: #6c757d;
        cursor: pointer;
        font-size: 11px;
        margin-top: 4px;
        padding: 0;
        font-weight: 500;
    }

    .toggle-variants:hover {
        color: #212529;
    }

    /* Status Badge Styles */
    .status-cell {
        min-width: 100px;
        text-align: center;
    }

    .status-badge {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 16px;
        font-size: 11px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        white-space: nowrap;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    .status-approved {
        background: #e6f4ea;
        color: #1e4620;
        border: 1px solid #bcd8c1;
    }

    .status-rejected {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .status-pending {
        background: #fff3cd;
        color: #856404;
        border: 1px solid #ffeeba;
    }

    /* Toggle Switch */
    .list-cell {
        min-width: 80px;
        text-align: center;
    }

    .toggle-switch {
        position: relative;
        width: 50px;
        height: 26px;
        background: #dc3545;
        border-radius: 26px;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
    }

    .toggle-switch.active {
        background: #28a745;
    }

    .toggle-switch .slider {
        position: absolute;
        top: 2px;
        left: 2px;
        width: 22px;
        height: 22px;
        background: #ffffff;
        border-radius: 50%;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .toggle-switch.active .slider {
        transform: translateX(24px);
    }

    /* Action Buttons */
    .action-cell {
        min-width: 100px;
        text-align: center;
    }

    .action-buttons {
        display: flex;
        gap: 8px;
        justify-content: center;
    }

    .action-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 32px;
        height: 32px;
        border-radius: 6px;
        text-decoration: none;
        border: 1px solid #e9ecef;
        background: white;
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .action-button:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .action-button.edit {
        color: #0d6efd;
        border-color: #b6d7ff;
    }

    .action-button.edit:hover {
        background: #0d6efd;
        color: white;
        border-color: #0d6efd;
    }

    .action-button.delete {
        color: #dc3545;
        border-color: #f5c2c7;
    }

    .action-button.delete:hover {
        background: #dc3545;
        color: white;
        border-color: #dc3545;
    }

    .action-button svg {
        width: 14px;
        height: 14px;
    }

    /* Mobile Card Styles */
    .cards-container {
        display: none;
        gap: 16px;
        flex-direction: column;
    }

    .product-card {
        background: white;
        border-radius: 14px;
        padding: 20px;
        box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
        transition: all 0.2s ease;
    }

    .product-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 24px rgba(0, 0, 0, 0.12);
    }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
        padding-bottom: 12px;
        border-bottom: 1px solid #f1f3f4;
    }

    .card-product-info {
        display: flex;
        align-items: center;
        gap: 12px;
        flex: 1;
    }

    .card-content {
        margin-bottom: 18px;
    }

    .card-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 12px;
    }

    .card-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 12px;
    }

    /* Empty State */
    .empty-products {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 14px;
        box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
    }

    .empty-products-icon {
        font-size: 64px;
        margin-bottom: 20px;
    }

    .empty-title {
        font-size: 24px;
        color: #212529;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .empty-message {
        font-size: 16px;
        color: #6c757d;
        margin: 0 0 20px 0;
        line-height: 1.5;
    }

    /* Pagination Styles */
    .pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
        padding: 10px 0;
        font-size: 14px;
        color: #495057;
    }

    .pagination-info {
        font-weight: 500;
        color: #6c757d;
    }

    .pagination-controls {
        display: flex;
        gap: 8px;
        align-items: center;
    }

    .pagination-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
        border: 1px solid #e9ecef;
        background: white;
        border-radius: 8px;
        font-size: 14px;
        color: #212529;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .pagination-btn:hover:not(:disabled) {
        background: #f8f9fa;
        border-color: #ced4da;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .pagination-btn.active {
        background: #212529;
        color: white;
        border-color: #212529;
        font-weight: 600;
    }

    .pagination-btn:disabled {
        background: #f1f3f4;
        color: #adb5bd;
        cursor: not-allowed;
        border-color: #e9ecef;
    }

    .pagination-btn i {
        font-size: 12px;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .table-container {
            overflow-x: auto;
        }

        .products-table {
            min-width: 900px;
        }
    }

    @media (max-width: 768px) {
        .vendor-page {
            flex-direction: column;
            gap: 20px;
        }

        .sidebar .vendor-sidebar {
            width: 100%;
        }

        .table-container {
            display: none;
        }

        .cards-container {
            display: flex;
        }

        .page-title {
            font-size: 22px;
        }

        .page-subtitle {
            font-size: 13px;
        }

        .products-controls {
            flex-direction: column;
            align-items: stretch;
            gap: 12px;
        }

        .add-product-btn {
            width: 100%;
            justify-content: center;
        }
    }

    @media (max-width: 640px) {
        .vendor-container {
            padding: 12px;
        }

        .product-card {
            padding: 16px;
            border-radius: 11px;
        }

        .breadcrumb {
            font-size: 13px;
        }

        .empty-products {
            padding: 40px 15px;
        }

        .empty-products-icon {
            font-size: 48px;
        }

        .empty-title {
            font-size: 20px;
        }

        .empty-message {
            font-size: 14px;
        }

        .pagination {
            flex-direction: column;
            gap: 12px;
        }

        .pagination-btn {
            width: 32px;
            height: 32px;
            font-size: 13px;
        }
    }
</style>

<div class="vendor-page">
    <div class="vendor-container">
        <div class="breadcrumb">
            <a href="/vendor/dashboard">dashboard</a>
            <span class="breadcrumb-separator">></span>
            <span>products</span>
        </div>

        <div class="page-header">
            <h1 class="page-title">Products Management</h1>
            <p class="page-subtitle">Manage and organize all your products</p>
        </div>

        <section class="products-section">
            <div class="products-controls">
                <div style="display: flex; gap: 15px; align-items: center;">
                    <!-- Sort Dropdown -->
                    <div class="control-group">
                        <label for="sort" class="control-label">Sort by:</label>
                        <select id="sort" onchange="applyFilters()">
                            <option value="newest" <%=typeof sort !=='undefined' && sort==='newest' ? 'selected' : '' %>
                                >Newest</option>
                            <option value="oldest" <%=typeof sort !=='undefined' && sort==='oldest' ? 'selected' : '' %>
                                >Oldest</option>
                            <option value="name" <%=typeof sort !=='undefined' && sort==='name' ? 'selected' : '' %>
                                >Name</option>
                            <option value="price" <%=typeof sort !=='undefined' && sort==='price' ? 'selected' : '' %>
                                >Price</option>
                        </select>
                    </div>

                    

                    <!-- Status Filter -->
                    <div class="control-group">
                        <label for="status" class="control-label">Status:</label>
                        <select id="status" onchange="applyFilters()">
                            <option value="">All</option>
                            <option value="approved" <%=typeof status !=='undefined' && status==='approved' ? 'selected'
                                : '' %>>Approved</option>
                            <option value="pending" <%=typeof status !=='undefined' && status==='pending' ? 'selected'
                                : '' %>>Pending</option>
                            <option value="rejected" <%=typeof status !=='undefined' && status==='rejected' ? 'selected'
                                : '' %>>Rejected</option>
                        </select>
                    </div>
                </div>

                <a href="/vendor/products/add-product" class="add-product-btn">
                    <i class="fas fa-plus"></i>
                    Add Product
                </a>
            </div>

            <% if (products && products.length> 0) { %>
                <!-- Desktop Table View -->
                <div class="table-container">
                    <table class="products-table">
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>Product Info</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Listed</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% products.forEach((product, index)=> { %>
                                <tr class="product-row">
                                    <td class="product-image-cell">
                                        <div class="product-image">
                                            <img src="<%= product.variants && product.variants[0] && product.variants[0].images && product.variants[0].images[0] ? product.variants[0].images[0].url : '/images/default-product.jpg' %>"
                                                alt="<%= product.name || 'Product image' %>"
                                                onerror="this.src='/images/default-product.jpg'">
                                        </div>
                                    </td>
                                    <td class="product-info-cell">
                                        <div class="product-details">
                                            <p class="product-name">
                                                <%= product.name || 'Unnamed Product' %>
                                            </p>
                                            <span class="product-category">
                                                <%= product.category?.name || 'Unknown' %>
                                            </span>
                                        </div>
                                    </td>
                                    <td class="price-cell">
                                        <span class="product-price">₹<%= (product.price || 0).toFixed(2) %></span>
                                    </td>
                                    <td class="stock-cell">
                                        <% const totalStock=product.variants ? product.variants.reduce((sum, variant)=>
                                            sum + (variant.stock || 0), 0) : 0;
                                            let stockClass = totalStock > 20 ? 'high' : totalStock > 5 ? 'medium' :
                                            'low';
                                            %>
                                            <div class="stock-count <%= stockClass %>">
                                                <%= totalStock %>
                                            </div>

                                            <% if (product.variants && product.variants.length> 0) { %>
                                                <div class="variant-stock-container"
                                                    id="variant-container-<%= product._id %>" style="display: none;">
                                                    <% product.variants.forEach((variant)=> { %>
                                                        <div class="variant-item">
                                                            <span class="variant-color">
                                                                <%= variant.color || 'Default' %>
                                                            </span>
                                                            <span
                                                                class="variant-stock <%= variant.stock <= 5 ? 'low' : '' %>">
                                                                <%= variant.stock || 0 %>
                                                            </span>
                                                        </div>
                                                        <% }); %>
                                                </div>

                                                <% if (product.variants.length> 1) { %>
                                                    <button class="toggle-variants" type="button"
                                                        onclick="toggleVariants('<%= product._id %>')"
                                                        aria-expanded="false">
                                                        Show variants
                                                    </button>
                                                    <% } %>
                                                        <% } %>
                                    </td>
                                    <td class="list-cell">
                                        <div class="toggle-switch <%= product.isListed ? 'active' : '' %>"
                                            data-product-id="<%= product._id %>" role="switch"
                                            aria-checked="<%= product.isListed ? 'true' : 'false' %>">
                                            <div class="slider"></div>
                                        </div>
                                    </td>
                                    <td class="status-cell">
                                        <% if (product.approvalStatus==='approved' ) { %>
                                            <span class="status-badge status-approved">Approved</span>
                                            <% } else if (product.approvalStatus==='rejected' ) { %>
                                                <span class="status-badge status-rejected">Rejected</span>
                                                <% } else { %>
                                                    <span class="status-badge status-pending">Pending</span>
                                                    <% } %>
                                    </td>
                                    <td class="action-cell">
                                        <div class="action-buttons">
                                            <button class="action-button edit" type="button"
                                                onclick="editProduct('<%= product._id %>')" title="Edit Product">
                                                <svg width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                                    <path
                                                        d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708L5.707 14H2v-3.707L12.146.146zM3 12.5V13h.5l9-9L12 3.5l-9 9z" />
                                                </svg>
                                            </button>
                                            <button class="action-button delete" type="button"
                                                onclick="deleteProduct('<%= product._id %>')" title="Delete Product">
                                                <svg width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                                    <path
                                                        d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                                    <path fill-rule="evenodd"
                                                        d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                                </svg>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                </div>

                <!-- Mobile Card View -->
                <div class="cards-container">
                    <% products.forEach((product, index)=> { %>
                        <div class="product-card">
                            <div class="card-header">
                                <div class="card-product-info">
                                    <div class="product-image">
                                        <img src="<%= product.variants && product.variants[0] && product.variants[0].images && product.variants[0].images[0] ? product.variants[0].images[0].url : '/images/default-product.jpg' %>"
                                            alt="<%= product.name || 'Product image' %>"
                                            onerror="this.src='/images/default-product.jpg'">
                                    </div>
                                    <div class="product-details">
                                        <p class="product-name">
                                            <%= product.name || 'Unnamed Product' %>
                                        </p>
                                        <span class="product-category">
                                            <%= product.category?.name || 'Unknown' %>
                                        </span>
                                    </div>
                                </div>
                                <% if (product.approvalStatus==='approved' ) { %>
                                    <span class="status-badge status-approved">Approved</span>
                                    <% } else if (product.approvalStatus==='rejected' ) { %>
                                        <span class="status-badge status-rejected">Rejected</span>
                                        <% } else { %>
                                            <span class="status-badge status-pending">Pending</span>
                                            <% } %>
                            </div>

                            <div class="card-content">
                                <div class="card-meta">
                                    <span class="product-price">₹<%= (product.price || 0).toFixed(2) %></span>
                                    <span class="stock-count">Stock: <%= product.variants ?
                                            product.variants.reduce((sum, variant)=> sum + (variant.stock || 0), 0) : 0
                                            %></span>
                                </div>
                            </div>

                            <div class="card-actions">
                                <div class="toggle-switch <%= product.isListed ? 'active' : '' %>"
                                    data-product-id="<%= product._id %>" role="switch"
                                    aria-checked="<%= product.isListed ? 'true' : 'false' %>">
                                    <div class="slider"></div>
                                </div>

                                <div class="action-buttons">
                                    <button class="action-button edit" type="button"
                                        onclick="editProduct('<%= product._id %>')" title="Edit Product">
                                        <svg width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                            <path
                                                d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708L5.707 14H2v-3.707L12.146.146zM3 12.5V13h.5l9-9L12 3.5l-9 9z" />
                                        </svg>
                                    </button>
                                    <button class="action-button delete" type="button"
                                        onclick="deleteProduct('<%= product._id %>')" title="Delete Product">
                                        <svg width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                            <path
                                                d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                            <path fill-rule="evenodd"
                                                d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <% }); %>
                </div>
                <% } else { %>
                    <div class="empty-products">
                        <div class="empty-products-icon">📦</div>
                        <h3 class="empty-title">No Products Yet</h3>
                        <p class="empty-message">Start building your inventory by adding your first product.</p>
                        <a href="/vendor/products/add-product" class="add-product-btn">
                            <i class="fas fa-plus"></i>
                            Add Your First Product
                        </a>
                    </div>
                    <% } %>

                        <!-- Pagination -->
                        <% if (products && products.length> 0) { %>
                            <div class="pagination">
                                <div class="pagination-info">
                                    Showing 1-<%= products.length %> of <%= typeof totalProducts !=='undefined' ?
                                            totalProducts : products.length %> products
                                </div>
                                <div class="pagination-controls">
                                    <button class="pagination-btn" <%=typeof currentPage !=='undefined' &&
                                        currentPage==1 ? 'disabled aria-disabled="true"' : '' %>
                                        onclick="changePage(<%= typeof currentPage !=='undefined' ? currentPage - 1 : 1
                                            %>)"
                                            aria-label="Previous page">
                                            <i class="fas fa-chevron-left" aria-hidden="true"></i>
                                    </button>
                                    <% const current=typeof currentPage !=='undefined' ? currentPage : 1; const
                                        total=typeof totalPages !=='undefined' ? totalPages : 1; for (let i=1; i
                                        <=total; i++) { %>
                                        <button class="pagination-btn <%= i === current ? 'active' : '' %>"
                                            aria-current="<%= i === current ? 'page' : 'false' %>"
                                            onclick="changePage(<%= i %>)" aria-label="Page <%= i %>">
                                            <%= i %>
                                        </button>
                                        <% } %>
                                            <button class="pagination-btn" <%=typeof currentPage !=='undefined' &&
                                                typeof totalPages !=='undefined' && currentPage==totalPages
                                                ? 'disabled aria-disabled="true"' : '' %>
                                                onclick="changePage(<%= typeof currentPage !=='undefined' ? currentPage
                                                    + 1 : 2 %>)"
                                                    aria-label="Next page">
                                                    <i class="fas fa-chevron-right" aria-hidden="true"></i>
                                            </button>
                                </div>
                            </div>
                            <% } %>
        </section>
    </div>
</div>

<script>
    // Add event listeners to toggle switches after page load
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.toggle-switch').forEach(toggle => {
            toggle.addEventListener('click', function () {
                const productId = this.dataset.productId;
                const isListed = this.classList.contains('active');
                toggleProductListing(productId, !isListed);
            });
        });
    });

    // Toggle variant display
    function toggleVariants(productId) {
        const container = document.getElementById(`variant-container-${productId}`);
        const button = container.nextElementSibling;

        if (container.style.display === 'none') {
            container.style.display = 'block';
            button.textContent = 'Hide variants';
            button.setAttribute('aria-expanded', 'true');
        } else {
            container.style.display = 'none';
            button.textContent = 'Show variants';
            button.setAttribute('aria-expanded', 'false');
        }
    }

    // Toggle product listing status
    async function toggleProductListing(productId, isListed) {
        try {
            await axios.patch(`/vendor/products/${productId}`, { isListed });
            window.location.reload();
        } catch (error) {
            const message = error.response?.data?.message || 'Error updating listing status';
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error',
                confirmButtonText: 'Try Again',
                confirmButtonColor: '#212529'
            });
        }
    }

    // Edit product function
    function editProduct(productId) {
        window.location.href = `/vendor/products/edit-product/${productId}`;
    }

    // Delete product function
    async function deleteProduct(productId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc3545',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    await axios.delete(`/vendor/products/${productId}`);
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'The product has been deleted successfully.',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false,
                        confirmButtonColor: '#212529'
                    }).then(() => {
                        window.location.reload();
                    });
                } catch (error) {
                    const message = error.response?.data?.message || 'Error deleting product';
                    Swal.fire({
                        title: 'Error',
                        text: message,
                        icon: 'error',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#212529'
                    });
                }
            }
        });
    }

    // Change page function
    function changePage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);

        // Preserve existing filters
        const sort = document.getElementById('sort')?.value;
        const category = document.getElementById('category')?.value;
        const status = document.getElementById('status')?.value;

        if (sort) url.searchParams.set('sort', sort);
        if (category) url.searchParams.set('category', category);
        if (status) url.searchParams.set('status', status);

        window.location.href = url.toString();
    }

    // Apply filters function
    function applyFilters() {
        const sort = document.getElementById('sort').value;
        const category = document.getElementById('category').value;
        const status = document.getElementById('status').value;
        const url = new URL(window.location.href);

        // Reset to first page when applying filters
        url.searchParams.set('page', 1);

        // Set filter parameters
        url.searchParams.set('sort', sort);

        if (category) {
            url.searchParams.set('category', category);
        } else {
            url.searchParams.delete('category');
        }

        if (status) {
            url.searchParams.set('status', status);
        } else {
            url.searchParams.delete('status');
        }

        window.location.href = url.toString();
    }
</script>