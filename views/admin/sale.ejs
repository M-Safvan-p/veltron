<style>
  /* Pagination Styles */
  .pagination {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 20px;
    padding: 10px 0;
    font-size: 14px;
    color: #495057;
  }

  .pagination-info {
    font-weight: 500;
    color: #6c757d;
  }

  .pagination-controls {
    display: flex;
    gap: 8px;
    align-items: center;
  }

  .pagination-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    border: 1px solid #e9ecef;
    background: white;
    border-radius: 8px;
    font-size: 14px;
    color: #212529;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .pagination-btn:hover:not(:disabled) {
    background: #f8f9fa;
    border-color: #ced4da;
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .pagination-btn.active {
    background: #212529;
    color: white;
    border-color: #212529;
    font-weight: 600;
  }

  .pagination-btn:disabled {
    background: #f1f3f4;
    color: #adb5bd;
    cursor: not-allowed;
    border-color: #e9ecef;
  }

  .pagination-btn i {
    font-size: 12px;
  }

  /* Responsive Pagination */
  @media (max-width: 640px) {
    .pagination {
      flex-direction: column;
      gap: 12px;
    }

    .pagination-info {
      font-size: 13px;
    }

    .pagination-btn {
      width: 32px;
      height: 32px;
      font-size: 13px;
    }
  }

  .main-content {
    width: 100%;
    min-height: 100vh;
    padding: 20px;
  }

  .admin-page {
    display: flex;
    gap: 30px;
    align-items: flex-start;
    max-width: 1400px;
    margin: 0 auto;
  }

  .sidebar {
    flex-shrink: 0;
  }

  .admin-container {
    flex: 1;
    width: 100%;
    margin: 0;
    padding: 18px;
  }

  .breadcrumb {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 25px;
    font-size: 14px;
    color: #6c757d;
  }

  .breadcrumb a {
    color: #6c757d;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .breadcrumb a:hover {
    color: #212529;
  }

  .breadcrumb-separator {
    color: #adb5bd;
  }

  .page-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    flex-wrap: wrap;
    gap: 15px;
    position: relative;
  }

  .header-left {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
  }

  .header-left h1 {
    font-size: 24px;
    color: #212529;
    font-weight: 600;
    margin-bottom: 8px;
  }

  .header-left p {
    font-size: 14px;
    color: #6c757d;
    margin: 0;
  }

  .export-buttons {
    display: flex;
    gap: 10px;
    margin-left: auto;
  }

  .export-btn {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 10px 18px;
    background: white;
    border: 1px solid #e9ecef;
    border-radius: 8px;
    font-size: 13px;
    font-weight: 500;
    color: #212529;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .export-btn:hover {
    background: #f8f9fa;
    border-color: #ced4da;
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .export-btn i {
    font-size: 14px;
  }

  .export-btn.pdf {
    color: #dc3545;
  }

  .export-btn.excel {
    color: #198754;
  }

  .filter-section {
    background: white;
    padding: 20px;
    border-radius: 14px;
    box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
    border: 1px solid #e9ecef;
    margin-bottom: 30px;
  }

  .filter-title {
    font-size: 14px;
    font-weight: 600;
    color: #495057;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 15px;
  }

  .quick-filters {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
    flex-wrap: wrap;
  }

  .filter-chip {
    padding: 8px 16px;
    background: white;
    border: 1px solid #e9ecef;
    border-radius: 20px;
    font-size: 13px;
    font-weight: 500;
    color: #495057;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-chip:hover {
    background: #f8f9fa;
    border-color: #ced4da;
  }

  .filter-chip.active {
    background: #212529;
    color: white;
    border-color: #212529;
  }

  .custom-date-range {
    display: none;
    gap: 15px;
    align-items: center;
    flex-wrap: wrap;
  }

  .custom-date-range.active {
    display: flex;
  }

  .date-input-group {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .date-input-group label {
    font-size: 12px;
    font-weight: 500;
    color: #6c757d;
  }

  .date-input-group input {
    padding: 8px 12px;
    border: 1px solid #e9ecef;
    border-radius: 8px;
    font-size: 14px;
    color: #212529;
    transition: all 0.2s ease;
  }

  .date-input-group input:focus {
    outline: none;
    border-color: #212529;
    box-shadow: 0 0 0 3px rgba(33, 37, 41, 0.1);
  }

  .apply-filter-btn {
    padding: 8px 20px;
    background: #212529;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 13px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-top: 20px;
  }

  .apply-filter-btn:hover {
    background: #495057;
    transform: translateY(-1px);
  }

  .date-range-display {
    margin-top: 10px;
    padding: 10px 15px;
    background: #f8f9fa;
    border-radius: 8px;
    font-size: 13px;
    color: #495057;
  }

  .date-range-display strong {
    color: #212529;
  }

  .metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
  }

  .metric-card {
    background: white;
    padding: 20px;
    border-radius: 14px;
    box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
    border: 1px solid #e9ecef;
    transition: all 0.2s ease;
  }

  .metric-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.12);
  }

  .metric-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 12px;
  }

  .metric-icon {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
  }

  .metric-icon.orders {
    background: #e6f4ea;
    color: #1e4620;
  }

  .metric-icon.revenue {
    background: #d1f7e1;
    color: #146c43;
  }

  .metric-icon.commission {
    background: #fff3cd;
    color: #856404;
  }

  .metric-icon.vendors {
    background: #d1ecf1;
    color: #0c5460;
  }

  .metric-icon.products {
    background: #cce5ff;
    color: #004085;
  }

  .metric-icon.processing {
    background: #cce5ff;
    color: #004085;
  }

  .metric-icon.shipped {
    background: #d1f7e1;
    color: #146c43;
  }

  .metric-icon.completed {
    background: #e6f4ea;
    color: #1e4620;
  }

  .metric-icon.cancelled {
    background: #f8d7da;
    color: #721c24;
  }

  .metric-label {
    font-size: 12px;
    color: #6c757d;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: 600;
    margin-bottom: 8px;
  }

  .metric-value {
    font-size: 28px;
    color: #212529;
    font-weight: 600;
    line-height: 1;
  }

  .metric-subtitle {
    font-size: 12px;
    color: #6c757d;
    margin-top: 6px;
  }

  .table-container {
    background: white;
    border-radius: 14px;
    box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
    border: 1px solid #e9ecef;
    overflow: hidden;
    overflow-x: auto;
  }

  .table-header {
    padding: 20px;
    border-bottom: 2px solid #e9ecef;
  }

  .table-title {
    font-size: 16px;
    font-weight: 600;
    color: #212529;
    margin: 0;
  }

  .report-table {
    width: 100%;
    border-collapse: collapse;
    font-size: 14px;
  }

  .report-table thead {
    background: #f8f9fa;
  }

  .report-table th {
    padding: 18px 16px;
    text-align: left;
    font-weight: 600;
    color: #495057;
    font-size: 13px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    white-space: nowrap;
  }

  .report-table td {
    padding: 16px;
    border-bottom: 1px solid #f1f3f4;
    vertical-align: middle;
  }

  .report-row {
    transition: all 0.2s ease;
  }

  .report-row:hover {
    background: #f8f9fa;
  }

  .report-row:last-child td {
    border-bottom: none;
  }

  .order-id {
    font-weight: 600;
    color: #212529;
    font-size: 13px;
  }

  .order-date {
    font-size: 13px;
    color: #495057;
    font-weight: 500;
  }

  .customer-name {
    font-size: 14px;
    color: #212529;
    font-weight: 500;
  }

  .customer-email {
    font-size: 12px;
    color: #6c757d;
    margin-top: 2px;
  }

  .vendor-name {
    font-size: 13px;
    color: #495057;
    font-weight: 500;
  }

  .vendor-badge {
    display: inline-block;
    padding: 4px 10px;
    background: #e6f4ea;
    border-radius: 6px;
    font-size: 11px;
    font-weight: 600;
    color: #1e4620;
    margin-top: 3px;
  }

  .items-count {
    font-size: 13px;
    color: #6c757d;
  }

  .payment-method {
    display: inline-block;
    padding: 4px 10px;
    background: #f8f9fa;
    border-radius: 6px;
    font-size: 12px;
    font-weight: 500;
    color: #495057;
  }

  .order-total {
    font-size: 15px;
    color: #212529;
    font-weight: 600;
  }

  .commission-amount {
    font-size: 12px;
    color: #856404;
    margin-top: 3px;
  }

  .coupon-code {
    display: inline-block;
    padding: 4px 8px;
    background: #fff3cd;
    border: 1px solid #ffeeba;
    border-radius: 6px;
    font-size: 11px;
    font-weight: 600;
    color: #856404;
  }

  .status-badge {
    display: inline-block;
    padding: 6px 12px;
    border-radius: 16px;
    font-size: 11px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    white-space: nowrap;
  }

  .status-processing {
    background: #cce5ff;
    color: #004085;
    border: 1px solid #b3d7ff;
  }

  .status-shipped {
    background: #d1f7e1;
    color: #146c43;
    border: 1px solid #a8e5c0;
  }

  .status-completed {
    background: #e6f4ea;
    color: #1e4620;
    border: 1px solid #bcd8c1;
  }

  .status-cancelled {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }

  .empty-state {
    text-align: center;
    padding: 60px 20px;
  }

  .empty-icon {
    font-size: 64px;
    margin-bottom: 20px;
  }

  .empty-title {
    font-size: 20px;
    color: #212529;
    font-weight: 600;
    margin-bottom: 8px;
  }

  .empty-message {
    font-size: 14px;
    color: #6c757d;
    margin: 0;
  }

  @media (max-width: 1024px) {
    .report-table {
      min-width: 1100px;
    }
  }

  @media (max-width: 768px) {
    .admin-page {
      flex-direction: column;
    }

    .admin-container {
      padding: 12px;
    }

    .page-header {
      flex-direction: column;
      align-items: flex-start;
    }

    .metrics-grid {
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      gap: 12px;
    }

    .metric-card {
      padding: 16px;
    }

    .metric-value {
      font-size: 24px;
    }

    .quick-filters {
      gap: 8px;
    }

    .filter-chip {
      font-size: 12px;
      padding: 6px 12px;
    }
  }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="admin-page">
  <div class="admin-container">
    <div class="breadcrumb">
      <a href="/admin/dashboard">dashboard</a>
      <span class="breadcrumb-separator">></span>
      <span>sales report</span>
    </div>

    <div class="page-header">
      <div class="header-left">
        <h1>Sales Report</h1>
        <p>Complete overview of platform sales and performance</p>
      </div>
      <div class="export-buttons">
        <a href="/admin/sales/export/pdf?filter=<%= reportData.filter %>" class="export-btn pdf">
          <i class="fas fa-file-pdf"></i>
          Export PDF
        </a>
        <a href="/admin/sales/export/excel?filter=<%= reportData.filter %>" class="export-btn excel">
          <i class="fas fa-file-excel"></i>
          Export Excel
        </a>
      </div>
    </div>

    <!-- Date Range Filter Section -->
    <div class="filter-section">
      <div class="filter-title">
        <i class="fas fa-calendar-alt"></i> Date Range Filter
      </div>

      <div class="quick-filters">
        <button class="filter-chip <%= reportData.filter === 'today' ? 'active' : '' %>" onclick="applyQuickFilter('today')">
          Today
        </button>
        <button class="filter-chip <%= reportData.filter === 'week' ? 'active' : '' %>" onclick="applyQuickFilter('week')">
          This Week
        </button>
        <button class="filter-chip <%= reportData.filter === 'month' ? 'active' : '' %>" onclick="applyQuickFilter('month')">
          This Month
        </button>
        <button class="filter-chip <%= reportData.filter === 'year' ? 'active' : '' %>" onclick="applyQuickFilter('year')">
          This Year
        </button>
        <button class="filter-chip <%= reportData.filter === 'custom' ? 'active' : '' %>" onclick="toggleCustomRange()">
          Custom Range
        </button>
      </div>

      <div class="custom-date-range <%= reportData.filter === 'custom' ? 'active' : '' %>" id="custom-range">
        <div class="date-input-group">
          <label>From Date</label>
          <input type="date" id="start-date">
        </div>
        <div class="date-input-group">
          <label>To Date</label>
          <input type="date" id="end-date">
        </div>
        <button class="apply-filter-btn" onclick="applyCustomRange()">
          Apply Filter
        </button>
      </div>

      <div class="date-range-display">
        <strong>Selected Period:</strong>
        <%= reportData.startDate %> to <%= reportData.endDate %>
      </div>
    </div>

    <!-- Metrics Summary Cards -->
    <div class="metrics-grid">
      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon orders">
            <i class="fas fa-shopping-cart"></i>
          </div>
        </div>
        <div class="metric-label">Total Orders</div>
        <div class="metric-value">
          <%= reportData.totalOrders %>
        </div>
        <div class="metric-subtitle">All platform orders</div>
      </div>

      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon revenue">
            <i class="fas fa-rupee-sign"></i>
          </div>
        </div>
        <div class="metric-label">Total Revenue</div>
        <div class="metric-value">₹<%= parseFloat(reportData.totalRevenue).toLocaleString() %></div>
        <div class="metric-subtitle">Gross platform sales</div>
      </div>

      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon commission">
            <i class="fas fa-percentage"></i>
          </div>
        </div>
        <div class="metric-label">Platform Commission</div>
        <div class="metric-value">₹<%= parseFloat(reportData.totalCommission).toLocaleString() %></div>
        <div class="metric-subtitle">Total commission earned</div>
      </div>

      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon vendors">
            <i class="fas fa-store"></i>
          </div>
        </div>
        <div class="metric-label">Active Vendors</div>
        <div class="metric-value">
          <%= reportData.activeVendors %>
        </div>
        <div class="metric-subtitle">Vendors with sales</div>
      </div>

      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon products">
            <i class="fas fa-box"></i>
          </div>
        </div>
        <div class="metric-label">Products Sold</div>
        <div class="metric-value">
          <%= reportData.totalProductsSold %>
        </div>
        <div class="metric-subtitle">Total quantity</div>
      </div>

      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon processing">
            <i class="fas fa-clock"></i>
          </div>
        </div>
        <div class="metric-label">Processing</div>
        <div class="metric-value">
          <%= reportData.processingOrders %>
        </div>
        <div class="metric-subtitle">Pending orders</div>
      </div>

      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon shipped">
            <i class="fas fa-shipping-fast"></i>
          </div>
        </div>
        <div class="metric-label">Shipped</div>
        <div class="metric-value">
          <%= reportData.shippedOrders %>
        </div>
        <div class="metric-subtitle">In transit</div>
      </div>

      <div class="metric-card">
        <div class="metric-header">
          <div class="metric-icon completed">
            <i class="fas fa-check-circle"></i>
          </div>
        </div>
        <div class="metric-label">Completed</div>
        <div class="metric-value">
          <%= reportData.completedOrders %>
        </div>
        <div class="metric-subtitle">Delivered orders</div>
      </div>
    </div>

    <!-- Detailed Orders Table -->
    <div class="table-container">
      <div class="table-header">
        <h2 class="table-title">Detailed Sales Report</h2>
      </div>

      <% if (reportData.orders && reportData.orders.length > 0) { %>
        <table class="report-table">
          <thead>
            <tr>
              <th>Order ID</th>
              <th>Date</th>
              <th>Customer</th>
              <th>Vendor</th>
              <th>Items</th>
              <th>Payment</th>
              <th>Total</th>
              <th>Coupon</th>
              <th>Status</th>
            </tr>
          </thead>
          <tbody>
            <% reportData.orders.forEach(order => { %>
              <% 
                // Group products by vendor
                const vendorGroups = {};
                order.products.forEach(p => {
                  const vendorId = p.vendorId._id.toString();
                  if (!vendorGroups[vendorId]) {
                    vendorGroups[vendorId] = {
                      vendorName: p.vendorId.brandName,
                      products: [],
                      total: 0,
                      commission: 0
                    };
                  }
                  vendorGroups[vendorId].products.push(p);
                  vendorGroups[vendorId].total += p.productTotal;
                  vendorGroups[vendorId].commission += (p.productTotal - p.vendorEarning);
                });
                
                // Format date
                const dateOpts = { day: '2-digit', month: 'short', year: 'numeric' };
                const formattedDate = new Date(order.invoiceDate).toLocaleDateString('en-IN', dateOpts);
                
                // Customer info
                const customerName = order.customerId.fullName;
                const customerEmail = order.customerId?.email || '';
                
                // Create a row for each vendor in the order
                Object.values(vendorGroups).forEach((vendorGroup, index) => {
                  const totalItems = vendorGroup.products.reduce((sum, p) => sum + p.quantity, 0);
                  
                  // Get status priority
                  const priority = ['processing', 'shipped', 'completed', 'cancelled'];
                  let orderStatus = 'processing';
                  for (let status of priority) {
                    if (vendorGroup.products.some(p => p.orderStatus === status)) {
                      orderStatus = status;
                      break;
                    }
                  }
              %>
              <tr class="report-row">
                <td>
                  <span class="order-id">#<%= order.orderId.substring(0, 10) %></span>
                </td>
                <td>
                  <span class="order-date"><%= formattedDate %></span>
                </td>
                <td>
                  <div class="customer-name"><%= customerName %></div>
                  <% if (customerEmail) { %>
                    <div class="customer-email"><%= customerEmail %></div>
                  <% } %>
                </td>
                <td>
                  <div class="vendor-name"><%= vendorGroup.vendorName %></div>
                  <!-- <span class="vendor-badge"><%= vendorGroup.products.length %> product(s)</span> -->
                </td>
                <td>
                  <span class="items-count"><%= totalItems %> item<%= totalItems > 1 ? 's' : '' %></span>
                </td>
                <td>
                  <span class="payment-method"><%= order.paymentMethod || 'COD' %></span>
                </td>
                <td>
                  <div class="order-total">₹<%= vendorGroup.total.toLocaleString() %></div>
                  <div class="commission-amount">Commission: ₹<%= vendorGroup.commission.toLocaleString() %></div>
                </td>
                <td>
                  <% if (order.couponDetails.code) { %>
                    <span class="coupon-code"><%= order.couponDetails.code %></span>
                  <% } else { %>
                    <span style="color: #adb5bd; font-size: 13px;">—</span>
                  <% } %>
                </td>
                <td>
                  <span class="status-badge status-<%= orderStatus %>">
                    <%= orderStatus.charAt(0).toUpperCase() + orderStatus.slice(1) %>
                  </span>
                </td>
              </tr>
              <% }); %>
            <% }); %>
          </tbody>
        </table>
      <% } else { %>
        <div class="empty-state">
          <div class="empty-icon">📊</div>
          <h3 class="empty-title">No Sales Data</h3>
          <p class="empty-message">No orders found for the selected date range.</p>
        </div>
      <% } %>
    </div>

    <!-- Pagination -->
    <% if (reportData.orders && reportData.orders.length > 0) { %>
      <div class="pagination">
        <div class="pagination-info">
          Showing <%= (currentPage - 1) * 7 + 1 %>-<%= Math.min(currentPage * 7, reportData.totalOrders) %> of <%= reportData.totalOrders %> orders
        </div>
        <div class="pagination-controls">
          <button class="pagination-btn" <%= currentPage === 1 ? 'disabled' : '' %> onclick="changePage(<%= currentPage - 1 %>)" aria-label="Previous page">
            <i class="fas fa-chevron-left"></i>
          </button>

          <% for (let i = 1; i <= totalPages; i++) { %>
            <button class="pagination-btn <%= i === currentPage ? 'active' : '' %>" onclick="changePage(<%= i %>)" aria-label="Page <%= i %>">
              <%= i %>
            </button>
          <% } %>

          <button class="pagination-btn" <%= currentPage === totalPages ? 'disabled' : '' %> onclick="changePage(<%= currentPage + 1 %>)" aria-label="Next page">
            <i class="fas fa-chevron-right"></i>
          </button>
        </div>
      </div>
    <% } %>

  </div>
</div>

<script>
  function changePage(page) {
    const url = new URL(window.location.href);
    url.searchParams.set("page", page);
    window.location.href = url.toString();
  }

  function applyQuickFilter(filterType) {
    const url = new URL(window.location.href);
    url.searchParams.set('filter', filterType);
    url.searchParams.delete('page');
    window.location.href = url.toString();
  }

  function toggleCustomRange() {
    const customRange = document.getElementById('custom-range');
    const isActive = customRange.classList.contains('active');

    if (!isActive) {
      const url = new URL(window.location.href);
      url.searchParams.set('filter', 'custom');
      window.location.href = url.toString();
    }
  }

  function applyCustomRange() {
    const startDate = document.getElementById('start-date').value;
    const endDate = document.getElementById('end-date').value;

    if (!startDate || !endDate) {
      Swal.fire('Error', 'Please select both start and end dates', 'error');
      return;
    }

    if (new Date(startDate) > new Date(endDate)) {
      Swal.fire('Error', 'Start date cannot be after end date', 'error');
      return;
    }

    const today = new Date().setHours(0, 0, 0, 0);
    if (new Date(startDate).setHours(0, 0, 0, 0) > today || new Date(endDate).setHours(0, 0, 0, 0) > today) {
      Swal.fire('Error', 'Dates cannot be in the future', 'error');
      return;
    }

    const url = new URL(window.location.href);
    url.searchParams.set('filter', 'custom');
    url.searchParams.set('startDate', startDate);
    url.searchParams.set('endDate', endDate);
    url.searchParams.delete('page');
    window.location.href = url.toString();
  }
  </script>