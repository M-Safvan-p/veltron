<link rel="stylesheet" href="../../styles/admin/vendors.css">
<!-- Main Content -->
<div class="page-header">
    <h1 class="page-title">VENDOR LIST</h1>
    <div class="breadcrumb">
        <a href="/admin/dashboard">Dashboard</a>
        <span class="breadcrumb-separator">></span>
        <a href="/admin/vendors">VENDORS</a>
    </div>
</div>

<!-- Controls -->
<div class="controls">
    <div class="search-box">
        <i class="fas fa-search"></i>
        <input type="text" placeholder="Search Vendor...">
    </div>
    <a href="/admin/vendors/pendings" class="product-pending-btn">Vendor Pendings</a>
</div>

<!-- Vendors Table -->
<div class="vendors-table">
    <table>
        <thead class="table-header">
            <tr>
                <th>Brand name</th>
                <th>Phone</th>
                <th>Sales</th>
                <th>email</th>
                <th>Status</th>
                <th>BLOCK/UNBLOCK</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <% if (vendors && vendors.length> 0) { %>
                <% vendors.forEach((vendor, index)=> { %>
                    <tr class="table-row">
                        <td>
                            <div class="vendor-info">
                                <div class="vendor-avatar">
                                    <%= vendor.brandName[0].toUpperCase() %>
                                </div>
                                <%= vendor.brandName %>
                            </div>
                        </td>
                        <td>
                            <%= vendor.phoneNumber %>
                        </td>
                        <td>
                            <%= vendor?.sales || 0 %>
                        </td>
                        <td>
                            <%= vendor.brandEmail %>
                        </td>
                        <td>
                            <span class="status-badge <%= vendor.isBlocked ? 'status-blocked' : 'status-active' %>">
                                <%= vendor.isBlocked ? "Blocked" : "Active" %>
                            </span>
                        </td>
                        <td>
                            <div class="toggle-switch <%= vendor.isBlocked ? 'blocked' : 'active' %>"
                                data-vendor-id="<%= vendor._id %>">
                                <div class="slider"></div>
                            </div>
                        </td>

                        <td>
                            <button class="action-btn" onclick="viewVendor('<%= vendor._id %>')">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    </tr>
                    <% }) %>
                        <% } %>
        </tbody>
    </table>
</div>
<!-- Pagination -->
<div class="pagination">
    <div class="pagination-info">
        Showing 1-<%= vendors.length %> of <%= totalVendors %> vendors
    </div>
    <div class="pagination-controls">
        <button class="pagination-btn" <%=currentPage==1 ? 'disabled' : '' %> onclick="changePage(<%= currentPage - 1 %>
                )" aria-label="Previous page">
                <i class="fas fa-chevron-left" aria-hidden="true"></i>
        </button>
        <% for (let i=1; i <=totalPages; i++) { %>
            <button class="pagination-btn <%= i === currentPage ? 'active' : '' %>" onclick="changePage(<%= i %>)"
                aria-label="Page <%= i %>">
                <%= i %>
            </button>
            <% } %>
                <button class="pagination-btn" <%=currentPage==totalPages ? 'disabled' : '' %>
                    onclick="changePage(<%= currentPage + 1 %>)" aria-label="Next page">
                        <i class="fas fa-chevron-right" aria-hidden="true"></i>
                </button>
    </div>
</div>
<script>
    function changePage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);
        window.location.href = url.href;
    }

    function viewVendor(vendorId) {
        console.log("Viewing vendor:", vendorId);
        window.location.href = `/admin/vendors/${vendorId}`;
    }

    document.addEventListener("DOMContentLoaded", function () {
        // Toggle switch functionality
        const toggleSwitches = document.querySelectorAll(".toggle-switch");
        toggleSwitches.forEach((toggle) => {
            toggle.addEventListener("click", async function () {
                const vendorId = this.dataset.vendorId;
                const row = this.closest("tr");
                const statusBadge = row.querySelector(".status-badge");

                // Current state: if toggle has 'blocked' class, vendor is currently blocked
                const currentlyBlocked = this.classList.contains("blocked");
                const newBlockedState = !currentlyBlocked;

                // Optimistically toggle the UI
                this.classList.toggle("active");
                this.classList.toggle("blocked");

                if (statusBadge) {
                    statusBadge.textContent = newBlockedState ? "Blocked" : "Active";
                    statusBadge.className = `status-badge ${newBlockedState ? 'status-blocked' : 'status-active'}`;
                }

                try {
                    await axios.patch(`/admin/vendors/${vendorId}`, { isBlocked: newBlockedState });
                    console.log("Vendor status updated successfully");
                } catch (error) {
                    console.error("Failed to update status:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Failed to update vendor status.",
                    });

                    // Revert UI changes on error
                    this.classList.toggle("active");
                    this.classList.toggle("blocked");

                    if (statusBadge) {
                        statusBadge.textContent = currentlyBlocked ? "Blocked" : "Active";
                        statusBadge.className = `status-badge ${currentlyBlocked ? 'status-blocked' : 'status-active'}`;
                    }
                }
            });
        });
    });
</script>