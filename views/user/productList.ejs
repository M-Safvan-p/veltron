<style>
  /* Enhanced Product List with Theme */
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  :root {
    /* Primary Theme Colors */
    --primary-dark: #212529;
    --secondary-gray: #6c757d;
    --light-bg: #f8f9fa;
    --lighter-bg: #e9ecef;

    /* Status Colors */
    --success-color: #28a745;
    --danger-color: #dc3545;
    --warning-color: #ffc107;
    --info-color: #17a2b8;

    /* Neutral Colors */
    --white: #ffffff;
    --border-color: #dee2e6;

    /* Typography */
    --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    --font-size-xs: 12px;
    --font-size-sm: 14px;
    --font-size-base: 16px;
    --font-size-lg: 18px;
    --font-size-xl: 22px;
    --font-size-2xl: 28px;
    --font-size-display: 36px;

    /* Spacing */
    --spacing-xs: 8px;
    --spacing-sm: 12px;
    --spacing-md: 20px;
    --spacing-lg: 25px;
    --spacing-xl: 30px;

    /* Border Radius */
    --radius-sm: 8px;
    --radius-md: 14px;
    --radius-lg: 20px;

    /* Shadows */
    --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 18px rgba(0, 0, 0, 0.08);
    --shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.12);

    /* Transitions */
    --transition: 0.2s ease;
  }

  body {
    font-family: var(--font-family);
    font-size: var(--font-size-base);
    line-height: 1.6;
    color: var(--primary-dark);
    background-color: var(--light-bg);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--spacing-lg);
  }

  /* Search Section */
  .search-section {
    background: var(--white);
    padding: var(--spacing-xl) 0;
    margin-bottom: var(--spacing-xl);
    box-shadow: var(--shadow-sm);
  }

  .search-wrapper {
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
  }

  .search-title {
    font-size: var(--font-size-2xl);
    font-weight: 700;
    color: var(--primary-dark);
    margin-bottom: var(--spacing-sm);
    letter-spacing: -0.5px;
  }

  .search-subtitle {
    font-size: var(--font-size-base);
    color: var(--secondary-gray);
    margin-bottom: var(--spacing-lg);
  }

  .search-form {
    display: flex;
    gap: var(--spacing-sm);
  }

  .search-input {
    flex: 1;
    padding: var(--spacing-sm) var(--spacing-md);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-base);
    transition: all var(--transition);
    background: var(--white);
  }

  .search-input:focus {
    outline: none;
    border-color: var(--primary-dark);
    box-shadow: 0 0 0 3px rgba(33, 37, 41, 0.1);
  }

  .search-btn {
    padding: var(--spacing-sm) var(--spacing-xl);
    background: var(--primary-dark);
    color: var(--white);
    border: none;
    border-radius: var(--radius-sm);
    font-weight: 600;
    font-size: var(--font-size-sm);
    text-transform: uppercase;
    letter-spacing: 0.8px;
    cursor: pointer;
    transition: all var(--transition);
    white-space: nowrap;
  }

  .search-btn:hover {
    background: #000000;
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  .search-btn:active {
    transform: translateY(0);
  }

  /* Main Content */
  .main {
    padding: var(--spacing-xl) 0;
  }

  .filter-products-wrapper {
    display: grid;
    grid-template-columns: 320px 1fr;
    gap: var(--spacing-xl);
  }

  /* Mobile Filter Toggle */
  .mobile-filter-toggle {
    display: none;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-xs);
    width: 100%;
    padding: var(--spacing-sm) var(--spacing-md);
    background: var(--white);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-sm);
    font-weight: 600;
    font-size: var(--font-size-sm);
    text-transform: uppercase;
    letter-spacing: 0.8px;
    cursor: pointer;
    transition: all var(--transition);
    margin-bottom: var(--spacing-md);
  }

  .mobile-filter-toggle:hover {
    background: var(--primary-dark);
    color: var(--white);
    border-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  /* Sidebar */
  .sidebar {
    background: var(--white);
    border-radius: var(--radius-md);
    padding: var(--spacing-lg);
    box-shadow: var(--shadow-md);
    position: sticky;
    top: var(--spacing-md);
    height: fit-content;
  }

  .sidebar-header {
    display: none;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-md);
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--lighter-bg);
  }

  .sidebar-title {
    font-size: var(--font-size-xl);
    font-weight: 700;
    color: var(--primary-dark);
  }

  .close-filters {
    background: none;
    border: none;
    padding: var(--spacing-xs);
    cursor: pointer;
    transition: all var(--transition);
    border-radius: var(--radius-sm);
  }

  .close-filters:hover {
    background: var(--light-bg);
  }

  .filter-section {
    margin-bottom: var(--spacing-xl);
  }

  .filter-section:last-child {
    margin-bottom: 0;
  }

  .filter-title {
    font-size: var(--font-size-lg);
    font-weight: 600;
    color: var(--primary-dark);
    margin-bottom: var(--spacing-md);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-size: var(--font-size-sm);
  }

  .filter-list {
    list-style: none;
  }

  .filter-list li {
    margin-bottom: var(--spacing-xs);
  }

  .filter-label {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    cursor: pointer;
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--radius-sm);
    transition: all var(--transition);
    position: relative;
  }

  .filter-label:hover {
    background: var(--light-bg);
  }

  .filter-checkbox {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

  .checkmark {
    width: 18px;
    height: 18px;
    border: 2px solid var(--border-color);
    border-radius: 4px;
    position: relative;
    transition: all var(--transition);
    flex-shrink: 0;
  }

  .filter-checkbox:checked+.checkmark {
    background: var(--primary-dark);
    border-color: var(--primary-dark);
  }

  .filter-checkbox:checked+.checkmark::after {
    content: "";
    position: absolute;
    left: 5px;
    top: 1px;
    width: 5px;
    height: 10px;
    border: solid var(--white);
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }

  .filter-text {
    font-size: var(--font-size-sm);
    color: var(--primary-dark);
  }

  .price-options {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
  }

  .price-options label {
    position: relative;
    cursor: pointer;
  }

  .price-options input[type="radio"] {
    position: absolute;
    opacity: 0;
  }

  .price-options span {
    display: block;
    padding: var(--spacing-sm) var(--spacing-md);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-sm);
    font-weight: 500;
    color: var(--primary-dark);
    transition: all var(--transition);
    background: var(--white);
  }

  .price-options input[type="radio"]:checked+span {
    background: var(--primary-dark);
    color: var(--white);
    border-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
  }

  .price-options label:hover span {
    background: var(--light-bg);
    border-color: var(--primary-dark);
  }

  .filter-actions {
    margin-top: var(--spacing-lg);
    padding-top: var(--spacing-lg);
    border-top: 1px solid var(--lighter-bg);
  }

  .clear-filters-btn {
    display: block;
    width: 100%;
    text-align: center;
    padding: var(--spacing-sm) var(--spacing-md);
    background: var(--lighter-bg);
    color: var(--primary-dark);
    text-decoration: none;
    border-radius: var(--radius-sm);
    font-weight: 600;
    font-size: var(--font-size-sm);
    text-transform: uppercase;
    letter-spacing: 0.8px;
    transition: all var(--transition);
  }

  .clear-filters-btn:hover {
    background: var(--primary-dark);
    color: var(--white);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  .clear-filters-btn:active {
    transform: translateY(0);
  }

  /* Products Section */
  .products {
    background: var(--white);
    border-radius: var(--radius-md);
    padding: var(--spacing-lg);
    box-shadow: var(--shadow-md);
  }

  .products-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-xl);
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--lighter-bg);
  }

  .products-title {
    font-size: var(--font-size-xl);
    font-weight: 700;
    color: var(--primary-dark);
  }

  .product-count {
    color: var(--secondary-gray);
    font-weight: 500;
    font-size: var(--font-size-base);
  }

  .sort-select {
    padding: var(--spacing-xs) var(--spacing-md);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-sm);
    background: var(--white);
    font-size: var(--font-size-sm);
    font-weight: 500;
    color: var(--primary-dark);
    cursor: pointer;
    transition: all var(--transition);
  }

  .sort-select:focus {
    outline: none;
    border-color: var(--primary-dark);
    box-shadow: 0 0 0 3px rgba(33, 37, 41, 0.1);
  }

  .sort-select:hover {
    background: var(--light-bg);
  }

  /* Product Grid */
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-xl);
  }

  .product-card {
    background: var(--white);
    border-radius: var(--radius-md);
    overflow: hidden;
    box-shadow: var(--shadow-md);
    transition: all var(--transition);
    position: relative;
  }

  .product-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .product-image {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    background: var(--light-bg);
  }

  .product-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--transition);
  }

  .product-card:hover .product-img {
    transform: scale(1.05);
  }

  .product-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(33, 37, 41, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity var(--transition);
  }

  .product-card:hover .product-overlay {
    opacity: 1;
  }

  .quick-view-btn {
    background: var(--white);
    color: var(--primary-dark);
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: var(--radius-sm);
    text-decoration: none;
    font-weight: 600;
    font-size: var(--font-size-sm);
    text-transform: uppercase;
    letter-spacing: 0.8px;
    transition: all var(--transition);
  }

  .quick-view-btn:hover {
    background: var(--primary-dark);
    color: var(--white);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  .product-badges {
    position: absolute;
    top: var(--spacing-sm);
    left: var(--spacing-sm);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    z-index: 2;
  }

  .badge {
    padding: 4px var(--spacing-sm);
    border-radius: var(--radius-lg);
    font-size: var(--font-size-xs);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--white);
  }

  .sale-badge {
    background: var(--danger-color);
  }

  .out-of-stock-badge {
    background: var(--secondary-gray);
  }

  .product-info {
    padding: var(--spacing-md);
  }

  .product-vendor {
    font-size: var(--font-size-xs);
    color: var(--secondary-gray);
    margin-bottom: var(--spacing-xs);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .product-name {
    font-size: var(--font-size-base);
    font-weight: 600;
    color: var(--primary-dark);
    margin-bottom: var(--spacing-sm);
    line-height: 1.4;
  }

  .product-category,
  .product-color {
    margin-bottom: var(--spacing-sm);
  }

  .category-tag,
  .color-tag {
    display: inline-block;
    background: var(--light-bg);
    color: var(--secondary-gray);
    padding: 4px var(--spacing-sm);
    border-radius: var(--radius-lg);
    font-size: var(--font-size-xs);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .product-price {
    margin-bottom: var(--spacing-md);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .current-price {
    font-size: var(--font-size-lg);
    font-weight: 700;
    color: var(--primary-dark);
  }

  .original-price {
    font-size: var(--font-size-sm);
    color: var(--secondary-gray);
    text-decoration: line-through;
  }

  .product-actions {
    display: flex;
    gap: var(--spacing-xs);
  }

  .add-to-cart-btn,
  .add-to-wishlist-btn {
    flex: 1;
    padding: var(--spacing-sm) var(--spacing-md);
    border: none;
    border-radius: var(--radius-sm);
    font-weight: 600;
    font-size: var(--font-size-sm);
    text-transform: uppercase;
    letter-spacing: 0.8px;
    cursor: pointer;
    transition: all var(--transition);
    position: relative;
  }

  .add-to-cart-btn {
    background: var(--primary-dark);
    color: var(--white);
  }

  .add-to-cart-btn:hover:not(:disabled) {
    background: #000000;
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  .add-to-cart-btn:active:not(:disabled) {
    transform: translateY(0);
  }

  .add-to-wishlist-btn {
    background: var(--danger-color);
    color: var(--white);
  }

  .add-to-wishlist-btn:hover:not(:disabled) {
    background: #c82333;
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  .add-to-wishlist-btn:active:not(:disabled) {
    transform: translateY(0);
  }

  .add-to-cart-btn:disabled,
  .add-to-wishlist-btn:disabled {
    background: var(--secondary-gray);
    cursor: not-allowed;
    transform: none;
  }

  .add-to-cart-btn.loading,
  .add-to-wishlist-btn.loading {
    color: transparent;
  }

  .add-to-cart-btn.loading::after,
  .add-to-wishlist-btn.loading::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 16px;
    height: 16px;
    margin: -8px 0 0 -8px;
    border: 2px solid var(--white);
    border-top: 2px solid transparent;
    border-radius: 50%;
    animation: spin 0.6s linear infinite;
  }

  .add-to-cart-btn.success,
  .add-to-wishlist-btn.success {
    background: var(--success-color);
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  .stock-warning {
    margin-top: var(--spacing-sm);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: var(--warning-color);
    color: var(--primary-dark);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
    font-weight: 600;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  /* No Products */
  .no-products {
    grid-column: 1 / -1;
    text-align: center;
    padding: var(--spacing-xl) 0;
  }

  .no-products h3 {
    font-size: var(--font-size-xl);
    font-weight: 600;
    color: var(--primary-dark);
    margin-bottom: var(--spacing-sm);
  }

  .no-products p {
    color: var(--secondary-gray);
    font-size: var(--font-size-base);
  }

  /* Pagination */
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--spacing-xs);
    flex-wrap: wrap;
  }

  .page-btn {
    padding: var(--spacing-xs) var(--spacing-md);
    background: var(--white);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-sm);
    color: var(--primary-dark);
    font-weight: 600;
    font-size: var(--font-size-sm);
    cursor: pointer;
    transition: all var(--transition);
  }

  .page-btn:hover:not(:disabled) {
    background: var(--primary-dark);
    color: var(--white);
    border-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
  }

  .page-btn:active:not(:disabled) {
    transform: translateY(0);
  }

  .page-btn.active {
    background: var(--primary-dark);
    color: var(--white);
    border-color: var(--primary-dark);
  }

  .page-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Loading Overlay */
  .loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(248, 249, 250, 0.95);
    backdrop-filter: blur(4px);
    display: none;
    align-items: center;
    justify-content: center;
    z-index: 9999;
  }

  .loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid var(--lighter-bg);
    border-top: 4px solid var(--primary-dark);
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .filter-products-wrapper {
      grid-template-columns: 1fr;
    }

    .mobile-filter-toggle {
      display: flex;
    }

    .sidebar {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 320px;
      max-width: 90%;
      height: 100vh;
      z-index: 1001;
      overflow-y: auto;
      border-radius: 0;
    }

    .sidebar.active {
      display: block;
    }

    .sidebar-header {
      display: flex;
    }

    body.filters-open {
      overflow: hidden;
    }

    body.filters-open::before {
      content: "";
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(33, 37, 41, 0.7);
      backdrop-filter: blur(4px);
      z-index: 1000;
    }

    .container {
      padding: 0 var(--spacing-md);
    }
  }

  @media (max-width: 768px) {
    .search-form {
      flex-direction: column;
    }

    .search-btn {
      width: 100%;
      justify-content: center;
    }

    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: var(--spacing-md);
    }

    .products-header {
      flex-direction: column;
      align-items: stretch;
      gap: var(--spacing-md);
    }

    .product-actions {
      flex-direction: column;
    }

    .container {
      padding: 0 var(--spacing-sm);
    }

    .products,
    .sidebar {
      padding: var(--spacing-md);
    }
  }

  @media (max-width: 640px) {
    .search-title {
      font-size: var(--font-size-xl);
    }

    .product-grid {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 480px) {
    .products-title {
      font-size: var(--font-size-lg);
    }

    .product-name {
      font-size: var(--font-size-sm);
    }

    .current-price {
      font-size: var(--font-size-base);
    }
  }

  .page-ellipsis {
    padding: var(--spacing-xs) var(--spacing-md);
    font-size: var(--font-size-sm);
    color: var(--secondary-gray);
    display: flex;
    align-items: center;
  }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<!-- Search Section -->
<section class="search-section">
  <div class="container">
    <div class="search-wrapper">
      <h1 class="search-title">Premium Watch Collection</h1>
      <p class="search-subtitle">Find your perfect timepiece</p>
      <form action="/sale" method="GET" class="search-form">
        <input type="text" name="search" class="search-input" placeholder="Search watches by name or brand..." value="<%= query.search || '' %>" aria-label="Search products">
        <button type="submit" class="search-btn">Search</button>
      </form>
    </div>
  </div>
</section>

<!-- Main Content -->
<main class="main">
  <div class="container">
    <form action="/sale" method="GET" id="filterForm">
      <% if (query.search) { %>
      <input type="hidden" name="search" value="<%= query.search %>">
      <% } %>

      <div class="filter-products-wrapper">
        <!-- Mobile Filter Toggle -->
        <button type="button" class="mobile-filter-toggle" aria-expanded="false">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"></polygon>
          </svg>
          Filters
        </button>

        <!-- Sidebar Filters -->
        <aside class="sidebar" id="sidebar">
          <div class="sidebar-header">
            <h2 class="sidebar-title">Filters</h2>
            <button type="button" class="close-filters">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
              </svg>
            </button>
          </div>

          <!-- Categories Filter -->
          <div class="filter-section">
            <h3 class="filter-title">Categories</h3>
            <ul class="filter-list">
              <% if (categories && categories.length > 0) { %>
              <% categories.forEach(function(cat) { %>
              <li>
                <label class="filter-label">
                  <input type="checkbox" name="category" value="<%= cat._id %>" <%= (query.category && (Array.isArray(query.category) ? query.category : [query.category]).includes(cat._id.toString())) ? 'checked' : '' %> onchange="this.form.submit()" class="filter-checkbox">
                  <span class="checkmark"></span>
                  <span class="filter-text"><%= cat.name || 'Uncategorized' %></span>
                </label>
              </li>
              <% }); %>
              <% } else { %>
              <li style="padding: 8px 12px; color: var(--secondary-gray); font-size: 14px;">No categories available</li>
              <% } %>
            </ul>
          </div>

          <!-- Brands Filter -->
          <div class="filter-section">
            <h3 class="filter-title">Brands</h3>
            <ul class="filter-list">
              <% if (vendors && vendors.length > 0) { %>
              <% vendors.forEach(function(vend) { %>
              <li>
                <label class="filter-label">
              <input type="checkbox" name="vendor" value="<%= vend._id %>" <%= (query.vendor && (Array.isArray(query.vendor) ? query.vendor : [query.vendor]).includes(vend._id.toString())) ? 'checked' : '' %> onchange="this.form.submit()" class="filter-checkbox">
                  <span class="checkmark"></span>
                  <span class="filter-text"><%= vend.brandName || 'Uncategorized' %></span>
                </label>
              </li>
              <% }); %>
              <% } else { %>
              <li style="padding: 8px 12px; color: var(--secondary-gray); font-size: 14px;">No categories available</li>
              <% } %>
            </ul>
          </div>

          <!-- Price Range Filter -->
          <div class="filter-section">
            <h3 class="filter-title">Price Range</h3>
            <div class="price-options">
              <label>
                <input type="radio" name="priceRange" value="100-1000" <%= query.priceRange === '100-1000' ? 'checked' : '' %> onchange="this.form.submit()">
                <span>₹100 – ₹1000</span>
              </label>
              <label>
                <input type="radio" name="priceRange" value="1000-2000" <%= query.priceRange === '1000-2000' ? 'checked' : '' %> onchange="this.form.submit()">
                <span>₹1000 – ₹2000</span>
              </label>
              <label>
                <input type="radio" name="priceRange" value="2000-5000" <%= query.priceRange === '2000-5000' ? 'checked' : '' %> onchange="this.form.submit()">
                <span>₹2000 – ₹5000</span>
              </label>
              <label>
                <input type="radio" name="priceRange" value="5000-10000" <%= query.priceRange === '5000-10000' ? 'checked' : '' %> onchange="this.form.submit()">
                <span>₹5000 – ₹10000</span>
              </label>
              <label>
                <input type="radio" name="priceRange" value="10000+" <%= query.priceRange === '10000+' ? 'checked' : '' %> onchange="this.form.submit()">
                <span>₹10000+</span>
              </label>
            </div>
          </div>

          <!-- Clear Filters -->
          <div class="filter-actions">
            <a href="/sale" class="clear-filters-btn">Clear All Filters</a>
          </div>
        </aside>

        <!-- Products Section -->
        <section class="products">
          <div class="products-header">
            <h2 class="products-title">
              <% if (query.search) { %>
              Search Results
              <% } else { %>
              All Watches
              <% } %>
              <span class="product-count">(<%= totalProducts || 0 %>)</span>
            </h2>
            <select class="sort-select" name="sort" onchange="this.form.submit()">
              <option value="featured" <%= query.sort === 'featured' ? 'selected' : '' %>>Featured</option>
              <option value="newest" <%= query.sort === 'newest' ? 'selected' : '' %>>Newest</option>
              <option value="price-low" <%= query.sort === 'price-low' ? 'selected' : '' %>>Price: Low to High</option>
              <option value="price-high" <%= query.sort === 'price-high' ? 'selected' : '' %>>Price: High to Low</option>
              <option value="A-Z" <%= query.sort === 'A-Z' ? 'selected' : '' %>>Name: A-Z</option>
              <option value="Z-A" <%= query.sort === 'Z-A' ? 'selected' : '' %>>Name: Z-A</option>
            </select>
          </div>

          <div class="product-grid">
            <% if (products && products.length > 0) { %>
            <% products.forEach(function(product) { %>
            <% if (product.isListed && product.approvalStatus === 'approved') { %>
            <article class="product-card" data-category="<%= product.category._id || product.category %>" data-price="<%= product.discountedPrice || product.price %>">
              <div class="product-image">
                <% 
                                                let primaryImage = '/images/placeholder-watch.jpg';
                                                if (product.variants && product.variants[0] && 
                                                    product.variants[0].images && product.variants[0].images.length > 0) {
                                                    primaryImage = product.variants[0].images[0].url;
                                                }
                                            %>
                <img src="<%= primaryImage %>" alt="<%= product.name %> Watch" loading="lazy" onerror="this.src='/images/placeholder-watch.jpg'" class="product-img">

                <div class="product-overlay">
                  <a href="/product/<%= product._id %>" class="quick-view-btn">
                    Quick View
                  </a>
                </div>

                <div class="product-badges">
                  <% if (product.discountedPrice && product.discountedPrice < product.price && product.price > 0) { %>
                  <span class="badge sale-badge">
                    <%= Math.round(((product.price - product.discountedPrice) / product.price) * 100) %>% OFF
                  </span>
                  <% } %>
                  <% if (product.totalStock === 0) { %>
                  <span class="badge out-of-stock-badge">Out of Stock</span>
                  <% } %>
                </div>
              </div>

              <div class="product-info">
                <h3 class="product-vendor">
                  <%= product.vendorId && product.vendorId.brandName ?
                                                    product.vendorId.brandName : (product.vendorId &&
                                                    product.vendorId.businessName ? product.vendorId.businessName
                                                    : 'Unknown Vendor') %>
                </h3>
                <h4 class="product-name"><%= product.name %></h4>
                <div class="product-category">
                  <span class="category-tag">
                    <%= product.category && product.category.name ? product.category.name : 'Uncategorized' %>
                  </span>
                </div>
                <div class="product-color">
                  <span class="color-tag">
                    <%= product.variants && product.variants[0] && product.variants[0].color ? product.variants[0].color : 'N/A' %>
                  </span>
                </div>
                <div class="product-price">
                  <% if (product.discountedPrice && product.discountedPrice < product.price) { %>
                  <span class="original-price">₹<%= product.price.toLocaleString() %></span>
                  <span class="current-price">₹<%= product.discountedPrice.toLocaleString() %></span>
                  <% } else { %>
                  <span class="current-price">₹<%= product.price.toLocaleString() %></span>
                  <% } %>
                </div>

                <div class="product-actions">
                  <button class="add-to-cart-btn" data-product-id="<%= product._id %>" data-variant-id="<%= product.variants && product.variants[0] ? product.variants[0]._id : '' %>" data-product-name="<%= product.name %>" <%= product.totalStock === 0 ? 'disabled' : '' %>>
                    <%= product.totalStock === 0 ? 'Out of Stock' : 'Add to Cart' %>
                  </button>
                  <button class="add-to-wishlist-btn" data-product-id="<%= product._id %>" data-variant-id="<%= product.variants && product.variants[0] ? product.variants[0]._id : '' %>" data-product-name="<%= product.name %>">
                    Wishlist
                  </button>
                </div>

                <% if (product.totalStock > 0 && product.totalStock <= 5) { %>
                <div class="stock-warning">
                  Only <%= product.totalStock %> left!
                </div>
                <% } %>
              </div>
            </article>
            <% } %>
            <% }); %>
            <% } else { %>
            <div class="no-products">
              <h3>No products found</h3>
              <p>Try adjusting your filters or search terms</p>
            </div>
            <% } %>
          </div>

          <%
          function buildQueryUrl(page) {
            const params = new URLSearchParams();
            for (const [key, value] of Object.entries(query)) {
              if (Array.isArray(value)) {
                value.forEach(v => params.append(key, v));
              } else {
                params.append(key, value);
              }
            }
            params.set('page', page);
            return `/sale?${params.toString()}`;
          }
          %>
          <% if (products && products.length > 0 && totalPages > 1) { %>
          <nav class="pagination" aria-label="Product pagination">
            <!-- Previous Button -->
            <a class="page-btn prev-btn" href="<%= currentPage <= 1 ? '#' : buildQueryUrl(currentPage - 1) %>" <%= currentPage <= 1 ? 'aria-disabled="true"' : '' %> aria-label="Previous page">
              Previous
            </a>

            <!-- Page Numbers with Ellipsis -->
            <div class="page-numbers">
              <% 
                const maxPagesToShow = 5;
                let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
                let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

                if (endPage - startPage + 1 < maxPagesToShow) {
                    startPage = Math.max(1, endPage - maxPagesToShow + 1);
                }

                // Show first page and ellipsis if needed
                if (startPage > 1) { %>
              <a class="page-btn" href="<%= buildQueryUrl(1) %>" aria-label="Page 1">1</a>
              <% if (startPage > 2) { %>
              <span class="page-ellipsis">...</span>
              <% } %>
              <% }

                // Show page numbers in range
                for (let i = startPage; i <= endPage; i++) { %>
              <a class="page-btn <%= i === currentPage ? 'active' : '' %>" href="<%= buildQueryUrl(i) %>" aria-label="Page <%= i %>" <%= i === currentPage ? 'aria-current="page"' : '' %>>
                <%= i %>
              </a>
              <% }

                // Show last page and ellipsis if needed
                if (endPage < totalPages) { %>
              <% if (endPage < totalPages - 1) { %>
              <span class="page-ellipsis">...</span>
              <% } %>
              <a class="page-btn" href="<%= buildQueryUrl(totalPages) %>" aria-label="Page <%= totalPages %>">
                <%= totalPages %>
              </a>
              <% } %>
            </div>

            <!-- Next Button -->
            <a class="page-btn next-btn" href="<%= currentPage >= totalPages ? '#' : buildQueryUrl(currentPage + 1) %>" <%= currentPage >= totalPages ? 'aria-disabled="true"' : '' %> aria-label="Next page">
              Next
            </a>
          </nav>
          <% } %>
        </section>
      </div>
    </form>
  </div>
</main>

<!-- Loading Overlay -->
<div class="loading-overlay" id="loadingOverlay">
  <div class="loading-spinner"></div>
</div>

<script>
  (function() {
    'use strict';

    // Mobile filter toggle
    const mobileFilterToggle = document.querySelector('.mobile-filter-toggle');
    const sidebar = document.getElementById('sidebar');
    const closeFilters = document.querySelector('.close-filters');

    function toggleFilters() {
      if (!sidebar) return;
      const isExpanded = mobileFilterToggle.getAttribute('aria-expanded') === 'true';
      mobileFilterToggle.setAttribute('aria-expanded', !isExpanded);
      sidebar.classList.toggle('active');
      document.body.classList.toggle('filters-open');
    }

    if (mobileFilterToggle) {
      mobileFilterToggle.addEventListener('click', toggleFilters);
    }

    if (closeFilters) {
      closeFilters.addEventListener('click', toggleFilters);
    }

    // Close filters when clicking backdrop
    document.addEventListener('click', function(e) {
      if (!sidebar || !mobileFilterToggle) return;
      if (sidebar.classList.contains('active') &&
        !sidebar.contains(e.target) &&
        !mobileFilterToggle.contains(e.target)) {
        toggleFilters();
      }
    });

    // Pagination handler
    // Pagination handler
    document.addEventListener('click', function(e) {
      const pageLink = e.target.closest('.page-btn');
      if (pageLink && !pageLink.hasAttribute('aria-disabled')) {
        e.preventDefault(); // Prevent default navigation
        showLoading();
        window.location.href = pageLink.href;
      }
    });

    // Add to cart handler
    document.addEventListener('click', async function(e) {
      if (e.target.classList.contains('add-to-cart-btn') && !e.target.disabled) {
        const btn = e.target;
        const productId = btn.dataset.productId;
        const variantId = btn.dataset.variantId;
        const productName = btn.dataset.productName;

        const originalText = btn.textContent;
        btn.textContent = "ADDING...";
        btn.disabled = true;
        btn.classList.add('loading');

        try {
          const {
            data
          } = await axios.post('/cart/add', {
            productId,
            variantId,
            name: productName,
          });

          if (data.success) {
            btn.textContent = "ADDED!";
            btn.classList.remove('loading');
            btn.classList.add('success');

            if (typeof Swal !== 'undefined') {
              Swal.fire({
                title: "Added to Cart",
                text: `${productName} has been added to your cart.`,
                icon: "success",
                showCancelButton: true,
                confirmButtonText: "Go to Cart",
                cancelButtonText: "Continue Shopping",
                confirmButtonColor: "#212529",
                cancelButtonColor: "#6c757d",
                timer: 3000,
                timerProgressBar: true
              }).then((result) => {
                if (result.isConfirmed) {
                  window.location.href = "/cart";
                }
              });
            }

            setTimeout(() => {
              btn.textContent = originalText;
              btn.disabled = false;
              btn.classList.remove('success');
            }, 2000);
          } else {
            throw new Error(data.message || 'Failed to add to cart');
          }
        } catch (error) {
          console.error("Add to cart failed:", error);
          btn.textContent = originalText;
          btn.disabled = false;
          btn.classList.remove('loading');

          if (error.response && error.response.status === 401) {
            if (typeof Swal !== 'undefined') {
              Swal.fire({
                title: "Not Logged In",
                text: "You must log in to add items to your cart.",
                icon: "warning",
                confirmButtonText: "Login",
                confirmButtonColor: "#212529"
              }).then(() => window.location.href = "/login");
            } else {
              alert("Please log in to add items to your cart.");
              window.location.href = "/login";
            }
            return;
          }

          if (typeof Swal !== 'undefined') {
            Swal.fire({
              title: "Error",
              text: error.response?.data?.message || error.message || "Something went wrong.",
              icon: "error",
              confirmButtonColor: "#212529"
            });
          } else {
            alert(error.response?.data?.message || "Something went wrong.");
          }
        }
      }
    });

    // Add to wishlist handler
    document.addEventListener('click', async function(e) {
      if (e.target.classList.contains('add-to-wishlist-btn') && !e.target.disabled) {
        const btn = e.target;
        const productId = btn.dataset.productId;
        const variantId = btn.dataset.variantId;
        const productName = btn.dataset.productName;

        const originalText = btn.textContent;
        btn.textContent = "ADDING...";
        btn.disabled = true;
        btn.classList.add('loading');

        try {
          const {
            data
          } = await axios.post('/wishlist/add', {
            productId,
            variantId
          });

          if (data.success) {
            btn.textContent = "ADDED!";
            btn.classList.remove('loading');
            btn.classList.add('success');

            if (typeof Swal !== 'undefined') {
              Swal.fire({
                title: "Added to Wishlist",
                text: `${productName} has been added to your wishlist.`,
                icon: "success",
                confirmButtonColor: "#212529",
                timer: 2000,
                timerProgressBar: true
              });
            }

            setTimeout(() => {
              btn.textContent = originalText;
              btn.disabled = false;
              btn.classList.remove('success');
            }, 2000);
          } else {
            throw new Error(data.message || 'Failed to add to wishlist');
          }
        } catch (error) {
          console.error("Add to wishlist failed:", error);
          btn.textContent = originalText;
          btn.disabled = false;
          btn.classList.remove('loading');

          if (error.response && error.response.status === 401) {
            if (typeof Swal !== 'undefined') {
              Swal.fire({
                title: "Not Logged In",
                text: "You must log in to add items to your wishlist.",
                icon: "warning",
                confirmButtonText: "Login",
                confirmButtonColor: "#212529"
              }).then(() => window.location.href = "/login");
            } else {
              alert("Please log in to add items to your wishlist.");
              window.location.href = "/login";
            }
            return;
          }

          if (typeof Swal !== 'undefined') {
            Swal.fire({
              title: "Error",
              text: error.response?.data?.message || error.message || "Something went wrong.",
              icon: "error",
              confirmButtonColor: "#212529"
            });
          }
        }
      }
    });

    // Loading overlay functions
    function showLoading() {
      const overlay = document.getElementById('loadingOverlay');
      if (overlay) {
        overlay.style.display = 'flex';
      }
    }

    function hideLoading() {
      const overlay = document.getElementById('loadingOverlay');
      if (overlay) {
        overlay.style.display = 'none';
      }
    }



    window.addEventListener('load', hideLoading);
  })();
</script>