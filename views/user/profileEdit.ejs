<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.4/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<style>
    .main-content {
        background-color: white;
        width: 100%;
        min-height: 100vh;
        padding: 20px;
    }

    .profile-page {
        display: flex;
        gap: 30px;
        align-items: flex-start;
        max-width: 1200px;
        margin: 0 auto;
    }

    .sidebar {
        flex-shrink: 0;
    }

    .profile-container {
        flex: 1;
        max-width: 800px;
        width: 100%;
        margin: 0;
        padding: 18px;
    }

    .user-profile-header {
        background: white;
        border-radius: 14px;
        padding: 25px;
        box-shadow: 0 4px 18px rgba(0, 0, 0, 0.09);
        border: 1px solid #e9ecef;
        margin-bottom: 18px;
        text-align: center;
    }

    .user-avatar {
        width: 70px;
        height: 70px;
        border-radius: 50%;
        background: linear-gradient(135deg, #212529, #495057);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        font-weight: 600;
        margin: 0 auto 12px;
        text-transform: uppercase;
        overflow: hidden;
        position: relative;
    }

    .user-avatar img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
    }

    .user-avatar:hover .image-upload-overlay {
        opacity: 1;
    }

    .image-upload-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        border-radius: 50%;
    }

    .image-upload-overlay input[type="file"] {
        display: none;
    }

    .image-upload-overlay label {
        color: white;
        font-size: 12px;
        font-weight: 500;
        cursor: pointer;
        padding: 5px 10px;
        background: #212529;
        border-radius: 5px;
        text-transform: uppercase;
    }

    .user-name {
        font-size: 22px;
        color: #212529;
        font-weight: 600;
        margin-bottom: 7px;
    }

    .user-phone {
        font-size: 14px;
        color: #6c757d;
    }

    .welcome-section {
        text-align: center;
        margin-bottom: 25px;
    }

    .welcome-title {
        font-size: 22px;
        color: #212529;
        font-weight: 400;
        letter-spacing: 0.5px;
    }

    .profile-card {
        background: white;
        border-radius: 14px;
        padding: 30px;
        box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
        border: 1px solid #e9ecef;
    }

    .profile-form {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 7px;
    }

    .form-label {
        font-weight: 500;
        color: #495057;
        font-size: 14px;
        letter-spacing: 0.3px;
        text-transform: capitalize;
    }

    .form-input {
        padding: 14px 18px;
        border: 1px solid #dee2e6;
        border-radius: 7px;
        font-size: 15px;
        color: #6c757d;
        background-color: #f8f9fa;
        transition: all 0.2s ease;
        outline: none;
    }

    .form-input:focus {
        border-color: #adb5bd;
        background-color: #fff;
    }

    .button-group {
        display: flex;
        gap: 15px;
        justify-content: center;
        margin-top: 18px;
    }

    .update-button,
    .cancel-button {
        background: #212529;
        color: white;
        border: none;
        padding: 14px 35px;
        border-radius: 7px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        min-width: 110px;
        text-decoration: none;
        text-align: center;
        display: inline-block;
    }

    .cancel-button {
        background: #6c757d;
    }

    .update-button:hover {
        background: #495057;
        transform: translateY(-1px);
    }

    .cancel-button:hover {
        background: #5c636a;
        transform: translateY(-1px);
    }

    .update-button:active,
    .cancel-button:active {
        transform: translateY(0);
    }

    /* === Cropper Modal Styles === */
    .cropper-modal {
        display: none;
        position: fixed;
        inset: 0;
        /* shorthand for top:0, right:0, bottom:0, left:0 */
        width: 100%;
        height: 100%;
        background: rgba(15, 15, 15, 0.8);
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.3s ease;
    }

    .cropper-modal.show {
        opacity: 1;
        pointer-events: auto;
    }

    .cropper-container-wrapper {
        background: #fff;
        border-radius: 12px;
        padding: 24px;
        max-width: 520px;
        width: 92%;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
        animation: fadeInScale 0.35s ease forwards;
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .cropper-container {
        width: 100% !important;
        max-height: 420px !important;
        border-radius: 8px;
        margin: 0 auto;
        overflow: hidden;
        /* Prevents image overflow */
        position: relative;
    }

    .cropper-image {
        max-width: 100%;
        max-height: 420px;
        border-radius: 8px;
        object-fit: contain;
        /* Ensures image scales properly */
        display: block;
    }

    .cropper-buttons {
        display: flex;
        gap: 12px;
        justify-content: center;
        width: 100%;
    }

    .crop-button,
    .cancel-crop-button {
        background: #212529;
        color: #fff;
        border: none;
        padding: 10px 22px;
        border-radius: 6px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.25s ease, transform 0.2s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        min-width: 100px;
    }

    .cancel-crop-button {
        background: #6c757d;
    }

    .crop-button:hover {
        background: #343a40;
        transform: translateY(-2px);
    }

    .cancel-crop-button:hover {
        background: #5c636a;
        transform: translateY(-2px);
    }

    .crop-button:active,
    .cancel-crop-button:active {
        transform: translateY(0);
    }

    /* Circular crop preview */
    .cropper-view-box,
    .cropper-face {
        border-radius: 50% !important;
    }

    .cropper-view-box {
        outline: 2px solid rgba(51, 153, 255, 0.75);
    }

    @keyframes fadeInScale {
        from {
            transform: scale(0.95);
            opacity: 0;
        }

        to {
            transform: scale(1);
            opacity: 1;
        }
    }

    @media (max-width: 640px) {
        .profile-container {
            padding: 12px;
        }

        .profile-card {
            padding: 22px;
            border-radius: 11px;
        }

        .welcome-title {
            font-size: 20px;
        }

        .button-group {
            flex-direction: column;
            gap: 10px;
        }

        .update-button,
        .cancel-button {
            width: 100%;
        }

        .user-avatar {
            width: 60px;
            height: 60px;
            font-size: 24px;
        }

        .user-name {
            font-size: 20px;
        }

        .profile-page {
            flex-direction: column;
            gap: 20px;
        }

        .sidebar .profile-sidebar {
            width: 100%;
        }

        .profile-card {
            padding: 40px;
            border-radius: 16px;
        }

        .cropper-container {
            width: 95%;
        }
    }

    .profile-page .profile-sidebar {
        position: static !important;
        left: auto !important;
        width: 320px;
        height: fit-content;
        border-radius: 16px;
        overflow: hidden;
        transform: none !important;
    }
</style>

<div class="profile-page">
    <aside class="sidebar">
        <%- include('../partials/user/sidebar') %>
    </aside>
    <div class="profile-container">
        <div class="welcome-section">
            <h1 class="welcome-title">Edit Profile, <%= user.fullName %>!</h1>
        </div>
        <div class="profile-card">
            <div class="user-avatar">
                <img src="<%= user.profileImage %>" alt="<%= user.fullName %>'s Avatar" id="avatarPreview">
                <div class="image-upload-overlay">
                    <label for="profileImage">Change Image</label>
                    <input type="file" id="profileImage" name="profileImage" accept="image/*">
                </div>
            </div>
            <form id="profileForm" class="profile-form" enctype="multipart/form-data">
                <div class="form-group">
                    <label class="form-label">Full name</label>
                    <input type="text" class="form-input" name="fullName" value="<%= user.fullName %>">
                </div>
                <div class="form-group">
                    <label class="form-label">Phone</label>
                    <input type="tel" class="form-input" name="phoneNumber" value="<%= user.phoneNumber %>">
                </div>
                <div class="button-group">
                    <button type="submit" class="update-button">Update</button>
                    <a href="/profile" class="cancel-button">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="cropper-modal" id="cropperModal">
    <div class="cropper-container-wrapper"> <!-- just a wrapper -->
        <img id="imageToCrop" class="cropper-image">
        <div class="cropper-buttons">
            <button class="crop-button" id="cropButton">Crop</button>
            <button class="cancel-crop-button" id="cancelCropButton">Cancel</button>
        </div>
    </div>
</div>

<script>
    let cropper;
    let croppedBlob = null;

    const profileImageInput = document.querySelector('input[name="profileImage"]');
    const avatarPreview = document.getElementById('avatarPreview');
    const cropperModal = document.getElementById('cropperModal');
    const imageToCrop = document.getElementById('imageToCrop');
    const cropButton = document.getElementById('cropButton');
    const cancelCropButton = document.getElementById('cancelCropButton');

    // Handle image selection and initialize Cropper.js
    profileImageInput.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                imageToCrop.src = e.target.result;
                cropperModal.classList.add('show');
                if (cropper) cropper.destroy();
                cropper = new Cropper(imageToCrop, {
                    aspectRatio: 1, // Circular crop
                    viewMode: 1,
                    autoCropArea: 0.8,
                    background: false,
                    cropBoxMovable: true,
                    cropBoxResizable: true
                });
            };
            reader.readAsDataURL(file);
        }
    });

    // Crop and update preview
    cropButton.addEventListener('click', () => {
        if (cropper) {
            cropper.getCroppedCanvas({
                width: 200,
                height: 200,
                imageSmoothingQuality: 'high'
            }).toBlob((blob) => {
                croppedBlob = blob;
                avatarPreview.src = URL.createObjectURL(blob);
                cropperModal.classList.remove('show');
                cropper.destroy();
                cropper = null;
            }, 'image/jpeg', 0.9);
        }
    });

    // Cancel cropping
    cancelCropButton.addEventListener('click', () => {
        cropperModal.classList.remove('show');
        if (cropper) cropper.destroy();
        cropper = null;
        profileImageInput.value = '';
        croppedBlob = null;
    });

    // Handle form submission
    document.getElementById('profileForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        // Collect form data
        const formData = new FormData();
        formData.append('fullName', document.querySelector('input[name="fullName"]').value);
        formData.append('phoneNumber', document.querySelector('input[name="phoneNumber"]').value);
        console.log("CroppedBlob:", croppedBlob);
        if (croppedBlob) formData.append('profileImage', croppedBlob, 'profile.jpg');

        try {
            console.log("data ",...formData)
            // Send data to server
            await axios.post('/profile/edit', formData);
            // Success alert
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Profile updated successfully!',
                confirmButtonText: 'OK',
                customClass: { confirmButton: 'swal-confirm-black' }
            }).then(() => {
                window.location.href = '/profile';
            });
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                html: error.response?.data?.message || 'Failed to update profile. Please try again.',
                confirmButtonText: 'Retry'
            });
        }
    });
</script>